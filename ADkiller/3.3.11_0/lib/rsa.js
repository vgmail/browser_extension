!function(t){function n(){return{type:48,children:Array.prototype.slice.call(arguments)}}function e(t){return{type:6,content:t}}function r(t){return{type:2,out:t}}var o=n(n(e("*Â†HÂ†Ã·\r"),{}),{type:3,encapsulates:n(r("n"),r("e"))}),i=n(n(e("+"),{}),{type:4,out:"sha1"});function a(t,n){var e=0;function r(){return t.charCodeAt(e++)}var o={};if(function n(i){var a=r(),c=function(){var t=r();if(128&t){var n=127&t;if(n>2||0==n)throw"Unsupported length";t=0;for(var e=0;e<n;e++)t+=r()<<8*(n-1-e);return t}return t}();if("type"in i&&i.type!=a)throw"Unexpected type";if("content"in i&&i.content!=t.substr(e,c))throw"Unexpected content";if("out"in i&&(o[i.out]=new BigInteger(t.substr(e,c),256)),"children"in i){var u,h;for(u=0,h=e+c;e<h;u++){if(u>=i.children.length)throw"Too many children";n(i.children[u])}if(u<i.children.length)throw"Too few children";if(e>h)throw"Children too large"}else if("encapsulates"in i){if(0!=r())throw"Encapsulation expected";n(i.encapsulates)}else e+=c}(n),e!=t.length)throw"Too much data";return o}t.verifySignature=function(t,n,e){var r=function(t){try{return a(atob(t),o)}catch(t){return console.log("Invalid RSA public key: "+t),null}}(t);if(!r)return!1;r.e=parseInt(r.e.toString(16),16);var c=new BigInteger(atob(n),256).modPowInt(r.e,r.n).toString(256);try{var u=0;function h(){return c.charCodeAt(u++)}if(1!=h())throw"Wrong padding in signature digest";for(;255==h(););if(0!=c.charCodeAt(u-1))throw"Wrong padding in signature digest";var l=a(c.substr(u),i).sha1,f=new BigInteger(SHA1(e),16);return 0==l.compareTo(f)}catch(t){return console.log("Invalid encrypted signature: "+t),!1}}}(this);